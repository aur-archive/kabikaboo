Index: kabikaboo-1.7.new/src/document.py
===================================================================
--- kabikaboo-1.7.orig/src/document.py
+++ kabikaboo-1.7.new/src/document.py
@@ -83,7 +83,7 @@ class KabikabooNode:
             if type(input) != type(1):
                 raise TypeError, "expected integer, got %s" % type(input)
             if not 0 < input < 4000:
-                raise ValueError, "Argument must be between 1 and 3999"   
+                raise ValueError, "Argument must be between 1 and 3999"
             ints = (1000, 900,  500, 400, 100,  90, 50,  40, 10,  9,   5,  4,   1)
             nums = ('M',  'CM', 'D', 'CD','C', 'XC','L','XL','X','IX','V','IV','I')
             result = ""
@@ -207,7 +207,7 @@ class KabikabooNode:
         return self.title.center(length, ' ')
     # get spaced title with bullets
     def get_spaced_bullet_title(self, length):
-        title = self.get_title() 
+        title = self.get_title()
         return title.center(length, ' ')
     # get recursive title with path
     def get_recursive_title(self, title = '', separator = ' -> '):
@@ -716,7 +716,7 @@ class KabikabooDocument(KabikabooNode):
             self.bookmarks.remove(self.bookmarks[len(self.bookmarks)-1])
             result = True
         return result
-        
+
     # check node in bookmarks
     def is_node_bookmarked(self, node):
         result = False
@@ -816,4 +816,3 @@ class KabikabooDocument(KabikabooNode):
                     node.visits_all = 1
                 # recent
                 self.add_visited(node)
-
Index: kabikaboo-1.7.new/src/file.py
===================================================================
--- kabikaboo-1.7.orig/src/file.py
+++ kabikaboo-1.7.new/src/file.py
@@ -248,7 +248,7 @@ class KabikabooFile:
                     document.show_titles_in_export = True
                     document.version = '1.5'
                     self.load_file_message += "Upgrading to version 1.5 (added bookmarks)...\n"
-                    self.upgraded = True                    
+                    self.upgraded = True
                 # 1.7
                 # 1.7 test one
                 upgrade_17_needed = False
Index: kabikaboo-1.7.new/src/kabikaboo.py
===================================================================
--- kabikaboo-1.7.orig/src/kabikaboo.py
+++ kabikaboo-1.7.new/src/kabikaboo.py
@@ -4,7 +4,7 @@
 # Kabikaboo
 #
 # Recursive Writing Assistance Software
-# Created by 
+# Created by
 #  David Glen Kerr
 #  Jeremy Bicha
 #
@@ -291,14 +291,14 @@ class KabikabooMainWindow:
     def on_window_delete(self, widget, data=None):
         self.keep_open = self.close_window_query()
         return self.keep_open
-        
+
     # ok to delete query
     def close_window_query(self):
         if self.file.different and not self.file.save_on_exit and self.file.working_file!='':
-            dialog = gtk.MessageDialog(self.window, 
-                gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT, 
-                gtk.MESSAGE_INFO, 
-                gtk.BUTTONS_YES_NO, 
+            dialog = gtk.MessageDialog(self.window,
+                gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
+                gtk.MESSAGE_INFO,
+                gtk.BUTTONS_YES_NO,
                 "Your changes are not saved.\nQuit anyways?")
             response = dialog.run()
             dialog.destroy()
@@ -441,13 +441,13 @@ class KabikabooMainWindow:
             self.flip_node_grandchildren()
         # ctrl+b (add before)
         elif mod == 'Ctrl+B':
-            self.new_node_before_callback()	
+            self.new_node_before_callback()
         # ctrl+a (add after)
         elif mod == 'Ctrl+A':
-            self.new_node_after_callback()	
+            self.new_node_after_callback()
         # ctrl+c (add child)
         elif mod == 'Ctrl+C':
-            self.new_child_node_callback()	
+            self.new_child_node_callback()
         # right (expand)
         elif mod == 'Right':
             self.expand_row_callback()
@@ -456,7 +456,7 @@ class KabikabooMainWindow:
             self.collapse_row_callback()
         # ctrl++ (expand children)
         elif mod == 'Ctrl+=' or mod == 'Ctrl+X':
-            self.expand_all_children_callback()			
+            self.expand_all_children_callback()
         # home (delete children)
         elif mod == 'Home':
             self.default_view()
@@ -839,11 +839,11 @@ class KabikabooMainWindow:
         self.show_statusbar_menu_item = self.builder.get_object("checkmenuitem_statusbar")
         self.show_statusbar_menu_item.connect("toggled", self.show_statusbar_callback)
         self.show_toolbar_tree_menu_item = self.builder.get_object("checkmenuitem_toolbar_tree")
-        self.show_toolbar_tree_menu_item.connect("toggled", self.show_toolbar_tree_callback)    
+        self.show_toolbar_tree_menu_item.connect("toggled", self.show_toolbar_tree_callback)
         menu_item = self.builder.get_object("checkmenuitem_toolbar_text")
-        menu_item.connect("toggled", self.show_toolbar_text_callback)  
+        menu_item.connect("toggled", self.show_toolbar_text_callback)
         self.show_attributes_menu_item = self.builder.get_object("checkmenuitem_show_attributes")
-        self.show_attributes_menu_item.connect("toggled", self.show_attributes_callback)  
+        self.show_attributes_menu_item.connect("toggled", self.show_attributes_callback)
         menu_item = self.builder.get_object("checkmenuitem_spellcheck")
         menu_item.connect("toggled", self.checkbutton_spellcheck_callback)
         menu_item = self.builder.get_object("imagemenuitem_help")
@@ -1062,10 +1062,10 @@ Try sudo cp -R help/ /usr/share/gnome/he
         allow_new = True
         if self.file.different:
             allow_new = False
-            dialog = gtk.MessageDialog(self.window, 
-                gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT, 
-                gtk.MESSAGE_INFO, 
-                gtk.BUTTONS_YES_NO, 
+            dialog = gtk.MessageDialog(self.window,
+                gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
+                gtk.MESSAGE_INFO,
+                gtk.BUTTONS_YES_NO,
                 'You have not saved your current document.\nContinue?')
             response = dialog.run()
             dialog.destroy()
@@ -1097,7 +1097,7 @@ Try sudo cp -R help/ /usr/share/gnome/he
 
     # callback for open
     def open_document_callback(self, data=None):
-        chooser = gtk.FileChooserDialog(title="Open Kabikaboo Document", parent=None, 
+        chooser = gtk.FileChooserDialog(title="Open Kabikaboo Document", parent=None,
         action=gtk.FILE_CHOOSER_ACTION_OPEN,
         buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_OPEN,gtk.RESPONSE_OK))
         chooser.set_default_response(gtk.RESPONSE_OK)
@@ -1141,10 +1141,10 @@ Try sudo cp -R help/ /usr/share/gnome/he
             if dialog:
                 dialog.destroy()
             if self.file.upgraded:
-                dialog2 = gtk.MessageDialog(self.window, 
-                    gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT, 
-                    gtk.MESSAGE_INFO, 
-                    gtk.BUTTONS_OK, 
+                dialog2 = gtk.MessageDialog(self.window,
+                    gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
+                    gtk.MESSAGE_INFO,
+                    gtk.BUTTONS_OK,
                     self.file.load_file_message)
                 response = dialog2.run()
                 dialog2.destroy()
@@ -1159,10 +1159,10 @@ Try sudo cp -R help/ /usr/share/gnome/he
                 self.statistics.new_data(self.document)
         # open failed
         else:
-            dialog2 = gtk.MessageDialog(self.window, 
-                gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT, 
-                gtk.MESSAGE_INFO, 
-                gtk.BUTTONS_OK, 
+            dialog2 = gtk.MessageDialog(self.window,
+                gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
+                gtk.MESSAGE_INFO,
+                gtk.BUTTONS_OK,
                 'Error opening file.')
             response = dialog2.run()
             dialog2.destroy()
@@ -1190,10 +1190,10 @@ Try sudo cp -R help/ /usr/share/gnome/he
                     allow_open_last_file = False
                     print 'Not opening last file (%d failed attempts)...' % self.file.opened_attempts
                 '''message = "Program crash detected on last run.\nNot loading last opened document."
-                dialog = gtk.MessageDialog(self.window, 
-                    gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT, 
-                    gtk.MESSAGE_INFO, 
-                    gtk.BUTTONS_OK, 
+                dialog = gtk.MessageDialog(self.window,
+                    gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
+                    gtk.MESSAGE_INFO,
+                    gtk.BUTTONS_OK,
                     "Kabikaboo Crash Alert\n\n" + message)
                 response = dialog.run()
                 dialog.destroy()'''
@@ -1209,10 +1209,10 @@ Try sudo cp -R help/ /usr/share/gnome/he
                     self.document.post_load()
             # warn about upgrades
             if self.file.upgraded:
-                dialog = gtk.MessageDialog(self.window, 
-                    gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT, 
-                    gtk.MESSAGE_INFO, 
-                    gtk.BUTTONS_OK, 
+                dialog = gtk.MessageDialog(self.window,
+                    gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
+                    gtk.MESSAGE_INFO,
+                    gtk.BUTTONS_OK,
                     self.file.load_file_message)
                 response = dialog.run()
                 dialog.destroy()
@@ -1304,7 +1304,7 @@ Try sudo cp -R help/ /usr/share/gnome/he
         else:
             home = os.path.expanduser('~')
             chooser.set_current_folder(os.path.join(home, 'Documents'))
-            chooser.set_current_name(self.document.title + '.kaboo')    
+            chooser.set_current_name(self.document.title + '.kaboo')
         response = chooser.run()
         if response == gtk.RESPONSE_OK:
             self.file.save_to_file(chooser.get_filename(), self.document)
@@ -1366,10 +1366,10 @@ Try sudo cp -R help/ /usr/share/gnome/he
                 message += "\nand all of its children?"
             else:
                 message += "?"
-            dialog = gtk.MessageDialog(self.window, 
-                gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT, 
-                gtk.MESSAGE_INFO, 
-                gtk.BUTTONS_YES_NO, 
+            dialog = gtk.MessageDialog(self.window,
+                gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
+                gtk.MESSAGE_INFO,
+                gtk.BUTTONS_YES_NO,
                 message)
             response = dialog.run()
             dialog.destroy()
@@ -1394,10 +1394,10 @@ Try sudo cp -R help/ /usr/share/gnome/he
     def remove_children_callback(self, data=None):
         if self.editor_node and self.editor_iter:
             message = "Remove children of\n'"+self.editor_node.title+"'?"
-            dialog = gtk.MessageDialog(self.window, 
-                gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT, 
-                gtk.MESSAGE_INFO, 
-                gtk.BUTTONS_YES_NO, 
+            dialog = gtk.MessageDialog(self.window,
+                gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
+                gtk.MESSAGE_INFO,
+                gtk.BUTTONS_YES_NO,
                 message)
             response = dialog.run()
             dialog.destroy()
@@ -2379,7 +2379,7 @@ Kabikaboo. If not, see http://www.gnu.or
         # show tabs
         self.notebook.set_show_tabs(self.file.show_tabs)
         # autosave / autoopen
-        self.autoopen_menu_item.set_active(self.file.autoopen)        
+        self.autoopen_menu_item.set_active(self.file.autoopen)
         self.save_on_exit_menu_item.set_active(self.file.save_on_exit)
         self.autosave_menu_item.set_active(self.file.autosave)
         # spellcheck
@@ -2429,10 +2429,10 @@ Kabikaboo. If not, see http://www.gnu.or
             allow_new = True
             if self.file.different:
                 allow_new = False
-                dialog = gtk.MessageDialog(self.window, 
-                    gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT, 
-                    gtk.MESSAGE_INFO, 
-                    gtk.BUTTONS_YES_NO, 
+                dialog = gtk.MessageDialog(self.window,
+                    gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
+                    gtk.MESSAGE_INFO,
+                    gtk.BUTTONS_YES_NO,
                     'You have not saved your current document.\nContinue?')
                 response = dialog.run()
                 dialog.destroy()
@@ -2671,35 +2671,35 @@ Kabikaboo. If not, see http://www.gnu.or
             return True
 
     #checkbutton_statusbar
-    def show_statusbar_callback(self, toggled, data=None): 
+    def show_statusbar_callback(self, toggled, data=None):
         menu_item = self.builder.get_object("checkmenuitem_statusbar")
         self.file.show_statusbar = menu_item.get_active()
         self.file.save_settings_default()
         self.update_settings()
 
     #checkmenuitem_toolbar_tree
-    def show_toolbar_tree_callback(self, toggled, data=None): 
+    def show_toolbar_tree_callback(self, toggled, data=None):
         menu_item = self.builder.get_object("checkmenuitem_toolbar_tree")
         self.file.show_toolbar_tree = menu_item.get_active()
         self.file.save_settings_default()
         self.update_settings()
 
     #checkmenuitem_toolbar_text
-    def show_toolbar_text_callback(self, toggled, data=None): 
+    def show_toolbar_text_callback(self, toggled, data=None):
         menu_item = self.builder.get_object("checkmenuitem_toolbar_text")
         self.file.show_toolbar_text = menu_item.get_active()
         self.file.save_settings_default()
         self.update_settings()
 
     #checkmenuitem_spellcheck
-    def checkbutton_spellcheck_callback(self, toggled, data=None): 
+    def checkbutton_spellcheck_callback(self, toggled, data=None):
         if not editor.building_gui:
             menu_item = self.builder.get_object("checkmenuitem_spellcheck")
             self.file.spellcheck = menu_item.get_active()
             self.notify_spellcheck_change()
 
     #checkmenuitem_show_attributes
-    def show_attributes_callback(self, toggled, data=None): 
+    def show_attributes_callback(self, toggled, data=None):
         menu_item = self.builder.get_object("checkmenuitem_show_attributes")
         self.file.show_attributes = menu_item.get_active()
         self.file.save_settings_default()
@@ -2722,7 +2722,7 @@ Kabikaboo. If not, see http://www.gnu.or
 
     # callback for import
     def import_text_callback(self, data=None):
-        chooser = gtk.FileChooserDialog(title="Import Text File", parent=None, 
+        chooser = gtk.FileChooserDialog(title="Import Text File", parent=None,
             action=gtk.FILE_CHOOSER_ACTION_OPEN,
             buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_OPEN,gtk.RESPONSE_OK))
         chooser.set_default_response(gtk.RESPONSE_OK)
@@ -2758,10 +2758,10 @@ Kabikaboo. If not, see http://www.gnu.or
         if result:
             self.update_textview()
         else:
-            dialog2 = gtk.MessageDialog(self.window, 
-                gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT, 
-                gtk.MESSAGE_INFO, 
-                gtk.BUTTONS_OK, 
+            dialog2 = gtk.MessageDialog(self.window,
+                gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
+                gtk.MESSAGE_INFO,
+                gtk.BUTTONS_OK,
                 'Error importing file.')
             response = dialog2.run()
             dialog2.destroy()
Index: kabikaboo-1.7.new/src/settings.py
===================================================================
--- kabikaboo-1.7.orig/src/settings.py
+++ kabikaboo-1.7.new/src/settings.py
@@ -65,25 +65,25 @@ class KabikabooSettingsWindow:
         #close button
         close_button = self.builder.get_object("button_close")
         if close_button:
-            close_button.connect("clicked", self.closed_button_callback)        
+            close_button.connect("clicked", self.closed_button_callback)
         #checkbutton_openlastfile
         menu_item = self.builder.get_object("checkbutton_openlastfile")
-        menu_item.connect("toggled", self.checkbutton_openlastfile_callback)        
+        menu_item.connect("toggled", self.checkbutton_openlastfile_callback)
         #checkbutton_saveonexit
         menu_item = self.builder.get_object("checkbutton_saveonexit")
-        menu_item.connect("toggled", self.checkbutton_saveonexit_callback)        
+        menu_item.connect("toggled", self.checkbutton_saveonexit_callback)
         #checkbutton_autosave
         menu_item = self.builder.get_object("checkbutton_autosave")
-        menu_item.connect("toggled", self.checkbutton_autosave_callback)        
+        menu_item.connect("toggled", self.checkbutton_autosave_callback)
         #checkbutton_autosave_version
         menu_item = self.builder.get_object("checkbutton_autosave_version")
-        menu_item.connect("toggled", self.checkbutton_autosave_version_callback)        
+        menu_item.connect("toggled", self.checkbutton_autosave_version_callback)
         #checkbutton_tooltext
         menu_item = self.builder.get_object("checkbutton_tooltext")
-        menu_item.connect("toggled", self.checkbutton_tooltext_callback)    
+        menu_item.connect("toggled", self.checkbutton_tooltext_callback)
         #checkbutton_show_tabs
         menu_item = self.builder.get_object("checkbutton_show_tabs")
-        menu_item.connect("toggled", self.checkbutton_show_tabs_callback)    
+        menu_item.connect("toggled", self.checkbutton_show_tabs_callback)
         #checkbutton_node_path
         menu_item = self.builder.get_object("checkbutton_node_path")
         menu_item.connect("toggled", self.checkbutton_node_path_callback)
@@ -92,16 +92,16 @@ class KabikabooSettingsWindow:
         menu_item.connect("toggled", self.checkbutton_node_path_status_callback)
         #checkbutton_homog_tabs
         menu_item = self.builder.get_object("checkbutton_homog_tabs")
-        menu_item.connect("toggled", self.checkbutton_homog_tabs_callback)    
-        #checkbutton_tab_arrows    
+        menu_item.connect("toggled", self.checkbutton_homog_tabs_callback)
+        #checkbutton_tab_arrows
         menu_item = self.builder.get_object("checkbutton_tab_arrows")
-        menu_item.connect("toggled", self.checkbutton_tab_arrows_callback)    
+        menu_item.connect("toggled", self.checkbutton_tab_arrows_callback)
         #checkbutton_show_bullets
         menu_item = self.builder.get_object("checkbutton_show_bullets")
-        menu_item.connect("toggled", self.checkbutton_show_bullets_callback)    
+        menu_item.connect("toggled", self.checkbutton_show_bullets_callback)
         #checkbutton_attributes
         menu_item = self.builder.get_object("checkbutton_attributes")
-        menu_item.connect("toggled", self.checkbutton_attributes_callback)     
+        menu_item.connect("toggled", self.checkbutton_attributes_callback)
         #checkbutton_file_status
         menu_item = self.builder.get_object("checkbutton_file_status")
         menu_item.connect("toggled", self.checkbutton_file_status_callback)
@@ -249,132 +249,132 @@ class KabikabooSettingsWindow:
         self.file.save_settings_default()
         self.kabikaboo.update_settings()
 
-    #checkbutton_tooltext    
-    def checkbutton_tooltext_callback(self, toggled, data=None): 
-        menu_item = self.builder.get_object("checkbutton_tooltext")    
+    #checkbutton_tooltext
+    def checkbutton_tooltext_callback(self, toggled, data=None):
+        menu_item = self.builder.get_object("checkbutton_tooltext")
         self.file.tool_text = menu_item.get_active()
         self.file.save_settings_default()
         self.kabikaboo.update_settings()
 
     #checkbutton_show_tabs
-    def checkbutton_show_tabs_callback(self, toggled, data=None): 
-        menu_item = self.builder.get_object("checkbutton_show_tabs")    
+    def checkbutton_show_tabs_callback(self, toggled, data=None):
+        menu_item = self.builder.get_object("checkbutton_show_tabs")
         self.file.show_tabs = menu_item.get_active()
         self.file.save_settings_default()
         self.kabikaboo.update_settings()
 
     #checkbutton_node_path
-    def checkbutton_node_path_callback(self, toggled, data=None): 
-        menu_item = self.builder.get_object("checkbutton_node_path")    
+    def checkbutton_node_path_callback(self, toggled, data=None):
+        menu_item = self.builder.get_object("checkbutton_node_path")
         self.file.show_node_path = menu_item.get_active()
         self.file.save_settings_default()
         self.kabikaboo.update_settings()
         self.kabikaboo.update_node_path()
 
     #checkbutton_node_path_status
-    def checkbutton_node_path_status_callback(self, toggled, data=None): 
-        menu_item = self.builder.get_object("checkbutton_node_path_status")    
+    def checkbutton_node_path_status_callback(self, toggled, data=None):
+        menu_item = self.builder.get_object("checkbutton_node_path_status")
         self.file.show_node_path_status = menu_item.get_active()
         self.file.save_settings_default()
         self.kabikaboo.update_settings()
         self.kabikaboo.update_node_path()
 
     #checkbutton_homog_tabs
-    def checkbutton_homog_tabs_callback(self, toggled, data=None): 
-        menu_item = self.builder.get_object("checkbutton_homog_tabs")    
+    def checkbutton_homog_tabs_callback(self, toggled, data=None):
+        menu_item = self.builder.get_object("checkbutton_homog_tabs")
         self.file.homog_tabs = menu_item.get_active()
         self.file.save_settings_default()
         self.kabikaboo.update_settings()
 
-    #checkbutton_tab_arrows    
-    def checkbutton_tab_arrows_callback(self, toggled, data=None): 
+    #checkbutton_tab_arrows
+    def checkbutton_tab_arrows_callback(self, toggled, data=None):
         menu_item = self.builder.get_object("checkbutton_tab_arrows")
         self.file.show_tab_arrows = menu_item.get_active()
         self.file.save_settings_default()
         self.kabikaboo.update_settings()
 
     #checkbutton_show_bullets
-    def checkbutton_show_bullets_callback(self, toggled, data=None): 
+    def checkbutton_show_bullets_callback(self, toggled, data=None):
         menu_item = self.builder.get_object("checkbutton_show_bullets")
         self.file.show_bullets = menu_item.get_active()
         self.file.save_settings_default()
         self.kabikaboo.update_settings()
 
     #checkbutton_attributes
-    def checkbutton_attributes_callback(self, toggled, data=None): 
+    def checkbutton_attributes_callback(self, toggled, data=None):
         menu_item = self.builder.get_object("checkbutton_attributes")
         self.file.show_attributes = menu_item.get_active()
         self.file.save_settings_default()
         self.kabikaboo.update_settings()
 
     #checkbutton_file_status
-    def checkbutton_file_status_callback(self, toggled, data=None): 
-        menu_item = self.builder.get_object("checkbutton_file_status")    
+    def checkbutton_file_status_callback(self, toggled, data=None):
+        menu_item = self.builder.get_object("checkbutton_file_status")
         self.file.show_file_status = menu_item.get_active()
         self.file.save_settings_default()
         self.kabikaboo.update_status_bar()
 
     #checkbutton_move_on_new
-    def checkbutton_move_on_new_callback(self, toggled, data=None): 
-        menu_item = self.builder.get_object("checkbutton_move_on_new")    
+    def checkbutton_move_on_new_callback(self, toggled, data=None):
+        menu_item = self.builder.get_object("checkbutton_move_on_new")
         self.file.move_on_new = menu_item.get_active()
         self.file.save_settings_default()
 
     #checkbutton_sample_data
-    def checkbutton_sample_data_callback(self, toggled, data=None): 
+    def checkbutton_sample_data_callback(self, toggled, data=None):
         menu_item = self.builder.get_object("checkbutton_sample_data")
         self.file.sample_data = menu_item.get_active()
         self.file.save_settings_default()
 
     #checkbutton_tab_bullets
-    def checkbutton_tab_bullets_callback(self, toggled, data=None): 
+    def checkbutton_tab_bullets_callback(self, toggled, data=None):
         menu_item = self.builder.get_object("checkbutton_tab_bullets")
         self.file.tab_bullets = menu_item.get_active()
         self.file.save_settings_default()
         self.kabikaboo.update_notebook()
 
     #checkbutton_show_titles_in_view
-    def checkbutton_show_titles_in_view_callback(self, toggled, data=None): 
+    def checkbutton_show_titles_in_view_callback(self, toggled, data=None):
         menu_item = self.builder.get_object("checkbutton_show_titles_in_view")
         self.document.show_titles_in_view = menu_item.get_active()
         self.kabikaboo.update_textview()
         self.bump()
 
     #checkbutton_show_titles_in_export
-    def checkbutton_show_titles_in_export_callback(self, toggled, data=None): 
+    def checkbutton_show_titles_in_export_callback(self, toggled, data=None):
         menu_item = self.builder.get_object("checkbutton_show_titles_in_export")
         self.document.show_titles_in_export = menu_item.get_active()
         self.bump()
 
     #checkbutton_remember_position
-    def checkbutton_remember_position_callback(self, toggled, data=None): 
+    def checkbutton_remember_position_callback(self, toggled, data=None):
         menu_item = self.builder.get_object("checkbutton_remember_position")
         self.file.remember_position = menu_item.get_active()
         self.file.diff_set = False
         self.file.save_settings_default()
 
     #checkbutton_calculate_statistics
-    def checkbutton_calculate_statistics_callback(self, toggled, data=None): 
+    def checkbutton_calculate_statistics_callback(self, toggled, data=None):
         menu_item = self.builder.get_object("checkbutton_calculate_statistics")
         self.file.calculate_statistics = menu_item.get_active()
         self.file.save_settings_default()
 
     #checkbutton_show_application_name
-    def checkbutton_show_application_name_callback(self, toggled, data=None): 
+    def checkbutton_show_application_name_callback(self, toggled, data=None):
         menu_item = self.builder.get_object("checkbutton_show_application_name")
         self.file.show_application_name = menu_item.get_active()
         self.kabikaboo.update_window_titles()
         self.file.save_settings_default()
 
     #checkbutton_show_directory
-    def checkbutton_show_directory_callback(self, toggled, data=None): 
+    def checkbutton_show_directory_callback(self, toggled, data=None):
         menu_item = self.builder.get_object("checkbutton_show_directory")
         self.file.show_directory_status = menu_item.get_active()
         self.kabikaboo.update_status_bar()
         self.file.save_settings_default()
 
     #checkbutton_tree_toolbar_intree
-    def checkbutton_tree_toolbar_intree_callback(self, toggled, data=None): 
+    def checkbutton_tree_toolbar_intree_callback(self, toggled, data=None):
         menu_item = self.builder.get_object("checkbutton_tree_toolbar_intree")
         self.file.tree_toolbar_intree = menu_item.get_active()
         # we would call the next function, treebar_swap
@@ -466,7 +466,7 @@ class KabikabooSettingsWindow:
                 self.kabikaboo.check_autosave()
 
     #entry_application_name
-    def entry_application_name_callback(self, entrybox, data=None): 
+    def entry_application_name_callback(self, entrybox, data=None):
         entry = self.builder.get_object("entry_application_name")
         application_name = entry.get_text()
         if self.file.application_name != application_name:
@@ -474,7 +474,7 @@ class KabikabooSettingsWindow:
             self.kabikaboo.update_window_titles()
             self.file.save_settings_default()
 
-    # mark the document as changed 
+    # mark the document as changed
     def bump(self):
         if not self.populating:
             self.kabikaboo.bump()
Index: kabikaboo-1.7.new/src/statistics.py
===================================================================
--- kabikaboo-1.7.orig/src/statistics.py
+++ kabikaboo-1.7.new/src/statistics.py
@@ -64,12 +64,12 @@ class KabikabooStatisticsWindow:
             self.start_time = self.kabikaboo.start_time
             if self.kabikaboo.start_word_count == -1:
                 self.kabikaboo.start_word_count = self.document.word_count()
-            self.start_word_count = self.kabikaboo.start_word_count                
+            self.start_word_count = self.kabikaboo.start_word_count
         self.update_title()
         # display
         self.display_statistics()
         # timer
-        glib.timeout_add(250, self.display_statistics) 
+        glib.timeout_add(250, self.display_statistics)
         self.set_window_title()
 
     def set_window_title(self):
@@ -92,7 +92,7 @@ class KabikabooStatisticsWindow:
         else:
             if self.kabikaboo.start_word_count == -1:
                 self.kabikaboo.start_word_count = self.document.word_count()
-            self.start_word_count = self.kabikaboo.start_word_count                
+            self.start_word_count = self.kabikaboo.start_word_count
 
     def connect_gui(self):
         #close button
